<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Installing an alternate OpenWrt firmware on DGNWG05LM and ZHWG11LM gateways on OpenWrt on DGNWG05LM and ZHWG11LM gateways</title><link>https://dpolyakov.github.io/openlumi.github.io/</link><description>Recent content in Installing an alternate OpenWrt firmware on DGNWG05LM and ZHWG11LM gateways on OpenWrt on DGNWG05LM and ZHWG11LM gateways</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://dpolyakov.github.io/openlumi.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://dpolyakov.github.io/openlumi.github.io/domoticz-zigate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpolyakov.github.io/openlumi.github.io/domoticz-zigate/</guid><description>Installing Domoticz The OpenWrt 10.07 repository contains a rather old version of Domoticz. To install the recent version you should use the script, that you have to run in console
wget https://raw.githubusercontent.com/openlumi/openlumi.github.io/master/files/domoticz.sh -O - | sh It will install all requirements, Domoticz, and a plugin to work with zigbee. Domoticz interface will run on 8080 port.
Flash Zigate firmware and install Zigate plugin to Domoticz For the jn5169 chip, which is installed on our gateway, the Zigate firmware is used.</description></item><item><title>Flashing over USB</title><link>https://dpolyakov.github.io/openlumi.github.io/flashing-over-usb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpolyakov.github.io/openlumi.github.io/flashing-over-usb/</guid><description>Solder usb + uart To modify the firmware you need to make hardware modifications, solder 7 wires to the gateway itself
3 wires for the usb2uart adapter (you did this at the stage of receiving the root) 4 wires per usb connector, or a wire with a usb plug at the end. It is enough to solder 4 wires, + 5v, d +, d- and gnd. ID contact is not used Check that d + and d- are not reversed, otherwise the device will not be detected Flashing We have prepared an archive with the mfgtools program for downloading the firmware to the gateway, as well as the firmware itself.</description></item><item><title>Flashing ZiGate and configuring Zigbee2mqtt</title><link>https://dpolyakov.github.io/openlumi.github.io/zigbee2mqtt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpolyakov.github.io/openlumi.github.io/zigbee2mqtt/</guid><description>Flashing ZiGate and configuring Zigbee2mqtt For the jn5169 chip, which is installed on our gateway, the Zigate firmware is used. You need to flash it and reset it to default settings.
wget https://github.com/openlumi/JN-ZigbeeNodeControlBridge-firmware/releases/download/8ede/ZigbeeNodeControlBridge_8ede_JN5169_GP_Proxy_COORDINATOR_115200.bin -O /tmp/zigate.bin jnflash /tmp/zigate.bin jntool erase_pdm Add the repository with packages for openlumi project
(! grep -q openlumi /etc/opkg/customfeeds.conf /etc/opkg/distfeeds.conf) &amp;amp;&amp;amp; ( wget -q https://openlumi.github.io/openwrt-packages/public.key -O /tmp/public.key &amp;amp;&amp;amp; opkg-key add /tmp/public.key &amp;amp;&amp;amp; rm /tmp/public.key &amp;amp;&amp;amp; (cat /etc/openwrt_release | grep 21.</description></item><item><title>Gaining root</title><link>https://dpolyakov.github.io/openlumi.github.io/gain-root-on-dgnwg05lm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpolyakov.github.io/openlumi.github.io/gain-root-on-dgnwg05lm/</guid><description>Solder 3 contacts GND, RX, TX to UART:
Then connect UART 2 USB adapter. To use serial console while booting, you can use minicom/picocom on Linux or PuTTY on Windows. Use baudrate 115200. Stop booting by pressing any key in the uart terminal right after powering the device. If it not stops with prompt =&amp;gt; you should reboot the gateway by plugging it off and then on.
Prepare a new password for the root user.</description></item><item><title>Gpio</title><link>https://dpolyakov.github.io/openlumi.github.io/gpio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpolyakov.github.io/openlumi.github.io/gpio/</guid><description>Kudos to @Clear_Highway Ð¸ @lmahmutov
opkg update opkg install gpioctl-sysfs opkg install kmod-spi-gpio opkg install kmod-spi-dev opkg install kmod-spi-gpio-custom Control
echo &amp;#34;69&amp;#34; &amp;gt; /sys/class/gpio/export echo &amp;#34;70&amp;#34; &amp;gt; /sys/class/gpio/export echo &amp;#34;out&amp;#34; &amp;gt; /sys/class/gpio/gpio69/direction echo &amp;#34;out&amp;#34; &amp;gt; /sys/class/gpio/gpio70/direction echo &amp;#34;1&amp;#34; &amp;gt; /sys/class/gpio/gpio70/value echo &amp;#34;0&amp;#34; &amp;gt; /sys/class/gpio/gpio70/value GPIO numbers. Contact numbers start from the lowest on the photo and go up. DOWN and UP represents the type of pulling. Down to GND, UP - 3.</description></item><item><title>Installing Zesp32</title><link>https://dpolyakov.github.io/openlumi.github.io/zesp32/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpolyakov.github.io/openlumi.github.io/zesp32/</guid><description>Zesp will work the same as on the stock firmware, but due to the difference in system libraries, additional steps are required
1. Installing nodejs and zesp32 Add the package repository for the openlumi project
(! grep -q openlumi /etc/opkg/customfeeds.conf /etc/opkg/distfeeds.conf) &amp;amp;&amp;amp; ( wget -q https://openlumi.github.io/openwrt-packages/public.key -O /tmp/public.key &amp;amp;&amp;amp; opkg-key add /tmp/public.key &amp;amp;&amp;amp; rm /tmp/public.key &amp;amp;&amp;amp; (cat /etc/openwrt_release | grep 21.02 &amp;gt; /dev/null &amp;amp;&amp;amp; ( echo &amp;#39;src/gz openlumi_base https://openlumi.github.io/releases/21.02.0--dgnwg05lm/packages/arm_cortex-a9_neon/base&amp;#39; &amp;gt;&amp;gt; /etc/opkg/customfeeds.</description></item></channel></rss>